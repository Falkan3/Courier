@use "sass:color";
@use "sass:selector";
@use "../../../utils/mixins/order";
@use "../../../utils/mixins/palette";
@use "../../../utils/mixins/selectors";
@use "../../../utils/mixins/media-query/media-query-width";
@use "../../../utils/mixins/scrollbar";
@use "../../../utils/mixins/shadows";
@use "../../../utils/mixins/display";
@use "colors";
@use "components/scroll-down-btn";
@use "components/discount-code";

// todo: use palette colors instead of implicit import

/*
 * Work area wrapper
 */
&-work-area-wrapper {
	position: relative;
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	// height: 100%;
	min-height: 0;
	background-color: colors.$workAreaBgColor;
	transition: opacity cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

	&.dimmed {
		opacity: 0.5;
	}
}

/*
 * Work area interactions
 */
&-work-area-interactions {
	position: absolute;
	bottom: 0;
	display: flex;
	justify-content: center;
	width: 100%;
	padding-bottom: 0.5em;
	opacity: 0.5;
	transition: opacity cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

	&:hover {
		opacity: 1;
	}
}

/*
 * Work area
 */
&-work-area {
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	max-height: 100%;
	padding: 1em;
	line-height: 1.4;
	word-break: break-word;
	overflow: auto;
	overscroll-behavior: contain;

	@include shadows.shadow-bottom;
	@include scrollbar.scrollbar(colors.$workAreaScrollbarTrackColor, colors.$workAreaScrollbarHandleColor);

	// IOS disappearing scrollable element fix
	@supports (-webkit-overflow-scrolling: touch) {
		-webkit-overflow-scrolling: touch;
	}
}

&-drawer {
	position: absolute;
	bottom: 0;
	display: flex;
	flex-direction: column;
	width: 100%;
	max-height: 100%;
	padding: 1em 2em 0 2em;
	border-radius: 16px;
	background-color: colors.$wallBgColor;
	box-shadow: 0 0 16px 4px rgba(0, 0, 0, 0.2);

	@include media-query-width.m-small-devices {
		border-radius: 16px 16px 0 0;
	}

	&-content {
		display: flex;
		flex-direction: column;
		min-height: 0;
	}

	&-tab-content {
		padding: 1em 1.5em 1em 0;
		line-height: 1.6;
		overflow: auto;
		overscroll-behavior: contain;

		@include shadows.scroll-shadows;
		@include scrollbar.scrollbar(colors.$workAreaScrollbarTrackColor, colors.$workAreaScrollbarHandleColor);

		a, button {
			color: colors.$linkColor;
			text-decoration: none;
			cursor: pointer;
			transition: color cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

			&:hover,
			&:focus-visible {
				color: color.scale(colors.$linkColor, $lightness: 10%);
			}
		}

		a {
			word-break: break-word;
		}

		p:not(:first-child) {
			margin-top: 1em;
		}
	}

	&-tab-btns {
		display: flex;
		flex-wrap: wrap;
		gap: 1em;
		margin-bottom: 1em;

		button {
			padding: 0.5em 1em;
			border-radius: 34px;
			background-color: colors.$btnColor;
			color: colors.$messageTopicActiveFontColor;
			cursor: pointer;
			transition: background-color cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

			&:hover,
			&:focus-visible {
				background-color: colors.$btnColorActive;
			}
		}
	}
}

/*
 * Message
 */
&-message {
	$message: &;

	display: flex;
	gap: 1em;
	margin-bottom: 1em;

	@at-root #{selector.unify(&, #{selectors.bottom-most-fn(&)}--text)} {
		max-width: 90%;
	}

	&-content {
		$messageContent: #{selectors.bottom-most-fn(&)};

		flex: 1 0 0;

		@at-root {
			#{$message} {
				&--text {
					// align-self: flex-start;
					margin-right: auto;

					#{$messageContent} {
						padding: 0.5em 1em;
						border-radius: 0 12px 12px 12px;
						background-color: colors.$messageBgColorIncoming;
					}

					// outgoing messages (self modifier) styles
					@at-root #{selector.unify(selectors.bottom-most-fn(&), #{selectors.bottom-most-fn(#{$message}--self)})} {
						align-self: flex-end;
						margin-left: auto;
						margin-right: unset;

						#{$messageContent} {
							background-color: colors.$messageBgColorOutgoing;
							border-radius: 12px 12px 0;
						}
					}
				}

				&--system {
					#{$messageContent} {
						// align-self: center;
						margin-right: auto;
						margin-left: auto;
						background-color: transparent;
						text-align: center;
						font-style: italic;
					}
				}
			}
		}
	}

	&-img {
		flex: 0 0 auto;

		& > img, & > svg {
			display: block;
			width: 1.5em;
			height: 1.5em;
		}
	}

	&:last-child {
		margin-bottom: 0;
	}

	a {
		color: colors.$linkColor;
		text-decoration: none;
		transition: color cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

		&:hover {
			color: color.scale(colors.$linkColor, $lightness: 30%);
		}
	}
}

&-dots {
	display: flex;
	margin: -2px;

	&-dot {
		width: 0.5em;
		height: 0.5em;
		margin: 2px;
		border-radius: 50%;
		background-color: rgba(33, 33, 33, 0.25);

		&:nth-child(1) {
			@include bounceUp1;
		}

		&:nth-child(2) {
			@include bounceUp2;
		}

		&:nth-child(3) {
			@include bounceUp3;
		}
	}
}

/*
 * Timestamp
 */
&-timestamp {
	display: block;
	// align-self: flex-start;
	margin-right: auto;
	margin-bottom: 0.2em;
	font-size: 0.8em;
	color: palette.get-palette-hue("foreground", 800);

	&--self {
		// align-self: flex-end;
		margin-right: unset;
		margin-left: auto;
	}
}

/*
 * Topics
 */
&-topics {
	position: relative;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	margin: -4px;
}

&-topic {
	flex: 0 0 auto;
	margin: 4px;
	padding: 0.8em 1em;
	border: solid 2px colors.$messageTopicSecondaryColor;
	border-radius: 7px;
	background-color: colors.$messageTopicPrimaryColor;
	color: colors.$messageTopicFontColor;
	transition: background-color cubic-bezier(0.1, 1, 0.6, 1) 0.3s, color cubic-bezier(0.1, 1, 0.6, 1) 0.2s;

	&:not(#{selectors.bottom-most-fn(&)}--active):disabled {
		border-color: colors.$messageTopicDisabledBgColor;
		background-color: colors.$messageTopicDisabledBgColor;
		color: colors.$messageTopicDisabledFontColor;
	}

	&:hover:enabled {
		cursor: pointer;
	}

	&:hover:enabled,
	&:focus:enabled,
	&--active {
		border-color: colors.$messageTopicSecondaryColor;
		background-color: colors.$messageTopicSecondaryColor;
		color: colors.$messageTopicActiveFontColor;
	}

	&--full-w {
		flex: 1 0 100%;
	}
}

/*
 * Carousel
 */
&-carousel {
	/* width */
	&::-webkit-scrollbar {
		height: 8px;
	}

	/* track */
	&::-webkit-scrollbar-track {
		background-color: colors.$workAreaScrollbarTrackColor;
	}

	/* handle */
	&::-webkit-scrollbar-thumb {
		background-color: colors.$workAreaScrollbarHandleColor;

		/* handle on hover */
		&:hover {
			background-color: color.scale(colors.$workAreaScrollbarHandleColor, $lightness: -10%);
		}
	}

	/* only use without carousel library */
	//&:not(.glide) {
	//	display: flex;
	//	flex-direction: row;
	//	flex-wrap: nowrap;
	//	overflow: auto;
	//	scroll-snap-type: x proximity;
	//}

	&-item {
		display: block;
		margin-bottom: 6px;

		/* only use without carousel library */
		// margin-top: 12px;
		// margin-bottom: 12px;
		//
		// &:not(.glide) {
		// 	flex: 0 0 50%;
		// 	scroll-snap-align: start;
		// }

		&:not(:first-child) {
			margin-left: 6px;
		}

		&:not(:last-child) {
			margin-right: 6px;
		}

		&:last-child {
			scroll-snap-align: end;
		}

		&-content {
			display: flex;
			flex-direction: column;
			height: 100%;
			border-radius: 4px;
			background-color: colors.$messageCarouselPrimaryColor;
			box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.2);
			overflow: hidden;
		}

		&-img {
			position: relative;
			display: flex;
			flex-direction: row;
			flex-grow: 1;
			justify-content: center;
			align-items: center;

			&-wrapper {
				position: relative;
				padding: 0.5em;
			}

			&-content {
				display: block;
				width: auto;
				max-width: 100%;
				height: 8em;
				margin-right: auto;
				margin-left: auto;
			}
		}

		&-body {
			// flex-grow: 1;
			display: flex;
			flex-direction: column;
			// justify-content: flex-end;
			padding: 0.5em 1em;
			text-align: center;
		}

		&-name {
			margin-bottom: 0.5em;
			line-height: 1.3;

			&-link {
				display: block;
				@include display.text-truncate(2);

				@at-root {
					#{selectors.parent-fn(&)} a#{selectors.bottom-most-fn(&)} {
						color: inherit; // colors.$linkColor;
						transition: color cubic-bezier(0.1, 1, 0.6, 1) 0.3s;

						&:hover {
							color: color.scale(colors.$linkColor, $lightness: 5%);
						}
					}
				}
			}
		}

		&-price {
			display: flex;
			flex-wrap: wrap;
			justify-content: center;
			align-items: center;
			margin: -0.25em;

			&-wrapper {
				position: relative;
				padding: 0.25em;
			}

			&-tag {
				position: relative;
				display: inline-block;
				width: auto;
				margin-left: 1em;
				padding: 0.5em;
				border-left: 1px solid #6ab070;
				border-radius: 3px 4px 4px 3px;
				background-color: #6ab070;
				line-height: 1;
				color: #fff;

				&::before {
					content: "";
					position: absolute;
					top: 50%;
					left: -1em;
					width: 0;
					height: 0;
					border-top: 1em solid transparent;
					border-right: 1em solid #6ab070;
					border-bottom: 1em solid transparent;
					transform: translateY(-50%);
				}

				&::after {
					content: "";
					position: absolute;
					top: 50%;
					left: -0.25em;
					width: 4px;
					height: 4px;
					border-radius: 50%;
					background-color: #fff;
					transform: translateY(-50%);
				}
			}

			&-old {
				position: relative;
				// padding: 0.5em 0;
				// text-decoration: line-through;

				&::after {
					content: "";
					position: absolute;
					top: 50%;
					display: block;
					width: 100%;
					border-top: solid 1px currentcolor;
				}
			}

			&-discount-percentage {
				position: absolute;
				top: 0;
				left: 50%;
				// width: 100%;
				font-size: 0.9em;
				color: #dd3d47;
				font-weight: 500;
				white-space: nowrap;
				transform: translate(-50%, -50%);
			}
		}

		&-footer {
			padding: 0.5em;
			border-top: solid 1px color.scale(colors.$messageCarouselPrimaryColor, $lightness: -10%);
			font-size: 0.9em;
			text-align: center;
		}

		&-discount {
			/* individual discount bar */
			padding: 2px;
			background-color: #6ab070;
			text-align: center;
			color: color.mix(#6ab070, #fefefe, 10%);

			&-value {
				padding: 0 3px;
				color: color.mix(#6ab070, #fefefe, 5%);
			}
		}
	}
}

&-discount {
	@include discount-code.discount-code;
}

}

&-scroll-down-btn {
	@include scroll-down-btn.scroll-down-btn;
}
